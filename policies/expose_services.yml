---
- name: Create AWS resources
  hosts: local
  gather_facts: False
      
  tasks:
  - name: Find ec2 remote facts
    ec2_remote_facts:
      region: "{{aws_region}}"
      filters:
        instance-state-name: running
        "tag:KubernetesCluster": "{{ k8s_cluster_name }}"
    register: ec2_info

  - set_fact:
      ec2_master_id: "{{ item.id }}"
    with_items: "{{ ec2_info.instances }}" 
    when:
      - item.tags.Name == "master0"

  - name: Create elb security group
    ec2_group:
      name: elb_sg
      description: ELB Security Group
      region: "{{aws_region}}"
      vpc_id: "{{vpc_id}}"
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
    register: elb_sg

  - set_fact:
      elb_sg_id: "{{ elb_sg.group_id }}"

  - name: add rule in ec2 SG to accept traffic from ELB SG
    ec2_group:
      name: sg_http
      description: Security group for HTTP(S) access
      vpc_id: "{{vpc_id}}"
      rules:
        - proto: all
          group_id: "{{ elb_sg_id }}"
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
    when: update_security_group|bool==true
  
  - name: Create the ELB
    when: create_aws_elb|bool==true 
    ec2_elb_lb:
      name: "{{elb_name}}"
      state: present
      region: "{{ aws_region }}"
      security_group_ids: "{{ elb_sg_id }}"
      zones:
        - "{{elb_zone1}}"
        - "{{elb_zone2}}"
      listeners:
        - protocol: http
          load_balancer_port: 80
          instance_port: "{{ hostvars['NODE_PORT_HOLDER'].node_port }}"  #todo read from hostfile
    register: elb_info

  - name: Add each EC2 instance to the ELB
    ec2_elb:
      state: present
      ec2_elbs: "{{ elb_name }}"
      region: "{{ aws_region }}"
      instance_id: "{{ item.id }}"
      state: present
    with_items: "{{ ec2_info.instances }}"
    register: elb_add
    ignore_errors: yes
  
  - name: Allocating elastic IP to instance
    ec2_eip:
      in_vpc: yes
      reuse_existing_ip_allowed: yes
      state: present
      instance_id: "{{ ec2_master_id }}"
      region: "{{ aws_region }}"
    register: instance_eip
    when: create_elastic_ip|default(false)|bool==true 

  - set_fact:
      elb_name: "{{ elb_info.elb.dns_name }}"
  - debug:
      msg: "{{elb_name}}"
